@mixin style-title($size: 24px, $weight: bold, $align: start, $margin: 0px) {
  text-align: $align;
  font-size: $size;
  font-weight: $weight;
  margin: $margin;
}

// Mixin global pour les boutons avec animation au hover
@mixin btn($width: 218px, $font-size: 16px, $margin: 0px 0px 57px 0px) {
  // Style de base
  position: relative;
  z-index: 0;
  width: $width;
  font-size: $font-size;
  margin: $margin;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 25px;
  border: none;
  background: linear-gradient(-161deg, $pink, $purple);
  height: 50px;
  color: $light-white;
  padding: 0;
  cursor: pointer;

  // Pseudo-éléments pour les effets visuels
  &::before,
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    transition: opacity 300ms ease;
  }

  // Ombre normale (état initial)
  &::before {
    z-index: 1;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.25);
    opacity: 1;
  }

  // Ombre plus marquée + effet lumineux (état hover)
  &::after {
    z-index: 2;
    box-shadow:
      0 4px 10px 5px rgba(0, 0, 0, 0.25),
      inset 0 0 0.5px 50px rgba(255, 255, 255, 0.1);
    opacity: 0;
  }

  // Animation au survol : passage en fondu de ::before à ::after
  &:hover {
    &::before {
      opacity: 0;
    }

    &::after {
      opacity: 1;
    }
  }
}





// _____________________________________________________________________________________________________________________


// Mixin : font-container
// -----------------------
// Permet de gérer l'affichage des icônes Font Awesome utilisées dans la section "_functioning"
// $width  - Largeur du conteneur (par défaut : 40px)
// $height - Hauteur du conteneur (par défaut : 40px)
// $color  - Couleur de l'icône (par défaut : $symbol-color)
@mixin font-container($width: 40px, $height: 40px, $color: $symbol-color) {
  width: $width;
  height: $height;
  display: flex;
  align-items: center;
  justify-content: center;
  padding-left: 33.47px;

  .fa-solid {
    font-size: calc(#{$height} * 1);
    width: 100%;
    height: 100%;
    color: $color;
    display: block;
    line-height: 1;
  }
}

@mixin img__restaurent($img: "", $background-position-mobile: center bottom, $background-position-desktop: center -550px) {
  background-image: url(#{$img});
  background-size: cover;
  background-position: $background-position-mobile;
  width: 100%;
  height: 275px;
  position: relative;
  z-index: 0;

  @media(min-width:1440px) {
    height: 383px;
    background-position: $background-position-desktop;
  }

  ;
}

// Mixin : loader__element
// ------------------------
// Génère un élément de loader animé, positionné en absolu
// Paramètres par défaut :
// $background     - Couleur ou dégradé de fond
// $border-radius  - Forme de l’élément (par défaut : cercle partiel)
// $top/$left/...  - Position absolue (optionnels)
// $delay          - Décalage dans l’animation (par défaut : 0s)

@mixin loader__element($background: linear-gradient(90deg, $dark-green, $light-green),
  $border-radius: 100% 0% 100% 0%,
  $top: null,
  $left: null,
  $right: null,
  $bottom: null,
  $delay: 0s) {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40%;
  height: 40%;
  background: $background;
  border-radius: $border-radius;
  position: absolute;

  @if $top !=null {
    top: $top;
  }

  @if $bottom !=null {
    bottom: $bottom;
  }

  @if $left !=null {
    left: $left;
  }

  @if $right !=null {
    right: $right;
  }

  opacity: 1;
  animation: loaderAnim 600ms ease-in-out infinite alternate;
  animation-delay: $delay;

  &:hover {
    animation-play-state: paused;
  }
}