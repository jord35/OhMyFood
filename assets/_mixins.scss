@mixin style-title($size: 24px, $weight: bold, $align: start, $margin: 0px) {
  text-align: $align;
  font-size: $size;
  font-weight: $weight;
  margin: $margin;
}

// btn global pour tout le site avec animation au hover 
@mixin btn($width: 218px, $font-size: 16px, $margin: 0px 0px 57px 0px) {
  width: $width;
  font-size: $font-size;
  margin: $margin;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 25px;
  border: none;
  background: linear-gradient(-161deg, $pink, $purple);
  height: 50px;
  color: $light-white;
  padding: 0px;
  transition: box-shadow 300ms;
  box-shadow: 0px 4px 10px 0px rgba(0, 0, 0, 0.25), inset 0px 0px 0px 50px rgba(255, 255, 255, 0.0);

  &:hover {
    box-shadow: 0px 4px 10px 5px rgba(0, 0, 0, 0.25), inset 0px 0px 0.5px 50px rgba(255, 255, 255, 0.10);
  }

}


// ============================
// Mixins pour les icônes animées
// ============================

// Mixin : icon-toggle-transition
// ------------------------------
// Applique une transition douce pour la couleur et le fond au clic ou au survol
@mixin icon-toggle-transition {
  transition: color 600ms, background-color 600ms ease-out;
}

// Mixin : icon-toggle-gradient
// ----------------------------
// Applique un dégradé coloré uniquement sur le texte (effet "color fill" avec Font Awesome)
@mixin icon-toggle-gradient {
  background: linear-gradient(90deg, #9356DC, #FF79DA);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

// Mixin : icon-toggle-checked
// ---------------------------
// Définit le contenu d'une icône (ex: cœur rempli) après activation (ex: clic sur un bouton)
// Utilise Font Awesome
// Paramètres :
// $content      - Caractère Unicode (ex: "\f004" pour un cœur rempli)
// $color        - Couleur de base de l’icône (souvent transparent pour clip)
// $font-family  - Famille Font Awesome (par défaut : "Font Awesome 6 Free")
// $font-weight  - Poids pour afficher les icônes solides (900 pour fa-solid)
@mixin icon-toggle-checked($content: "\f004", $color: transparent, $font-family: "Font Awesome 6 Free", $font-weight: 900) {
  content: $content;
  color: $color;
  font-family: $font-family;
  font-weight: $font-weight;
  @include icon-toggle-gradient;
}

// _____________________________________________________________________________________________________________________


// Mixin : font-container
// -----------------------
// Permet de gérer l'affichage des icônes Font Awesome utilisées dans la section "_functioning"
// $width  - Largeur du conteneur (par défaut : 40px)
// $height - Hauteur du conteneur (par défaut : 40px)
// $color  - Couleur de l'icône (par défaut : $simpbol-color)
@mixin font-container($width: 40px, $height: 40px, $color: $simpbol-color) {
  width: $width;
  height: $height;
  display: flex;
  align-items: center;
  justify-content: center;
  padding-left: 33.47px;

  .fa-solid {
    font-size: calc(#{$height} * 1);
    width: 100%;
    height: 100%;
    color: $color;
    display: block;
    line-height: 1;
  }
}

@mixin img__restaurent($img: "") {
  background-image: url(#{$img});
  background-size: cover;
  background-position: center bottom;
  width: 100%;
  height: 275px;
  position: relative;
  z-index: 0;

  @media(min-width:1440px) {
    height: 383px;
    background-position: center -325px;
  }

  ;
}

// Mixin : loader__element
// ------------------------
// Génère un élément de loader animé, positionné en absolu
// Paramètres par défaut :
// $background     - Couleur ou dégradé de fond
// $border-radius  - Forme de l’élément (par défaut : cercle partiel)
// $top/$left/...  - Position absolue (optionnels)
// $delay          - Décalage dans l’animation (par défaut : 0s)

@mixin loader__element($background: linear-gradient(90deg, #4e883f, #60bd9e),
  $border-radius: 100% 0% 100% 0%,
  $top: null,
  $left: null,
  $right: null,
  $bottom: null,
  $delay: 0s) {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40%;
  height: 40%;
  background: $background;
  border-radius: $border-radius;
  position: absolute;

  @if $top !=null {
    top: $top;
  }

  @if $bottom !=null {
    bottom: $bottom;
  }

  @if $left !=null {
    left: $left;
  }

  @if $right !=null {
    right: $right;
  }

  opacity: 1;
  animation: loaderAnim 600ms ease-in-out infinite alternate;
  animation-delay: $delay;

  &:hover {
    animation-play-state: paused;
  }
}